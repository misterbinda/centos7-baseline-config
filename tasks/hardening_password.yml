---
- name: CentOS | Harden Password | Set minimum password length
  set_fact:
    password_min_length: 15

- name: CentOS | Harden | Disable login with empty passwords
  replace:
    regexp: 'nullok_secure'
    replace: ''
    dest: "{{ path_pam_system_auth }}"

- name: CentOS | Harden | Disable login with empty passwords
  replace:
    regexp: 'nullok'
    replace: ''
    dest: "{{ path_pam_system_auth }}"

- name: CentOS | Harden Password | Configure pwquality.conf
  lineinfile:
    dest: /etc/security/pwquality.conf
    regexp: "{{ item.reg }}"
    line: "{{ item.line }}"
    state: present
  with_items:
    - {reg: '^dcredit[\s]*=[\s]*(-?\d+)(?:[\s]|$)', line: 'dcredit = -1'}
    - {reg: '^minlen[\s]*=[\s]*(-?\d+)(?:[\s]|$)', line: 'minlen = {{ password_min_length }}'}
    - {reg: '^ucredit[s\]*=[\s]*(-?\d+)(?:[\s]|$)', line: 'ucredit = -1'}
    - {reg: '^ocredit[\s]*=[\s]*(-?\d+)(?:[\s]|$)', line: 'ocredit = -1'}
    - {reg: '^lcredit[\s]*=[\s]*(-?\d+)(?:[\s]|$)', line: 'lcredit = -1'}
    - {reg: '^difok[\s]*=[\s]*(\d+)(?:[\s]|$)', line: 'difok = 4'}

- name: CentOS | Harden Password | Set hashing algorithm to SHA512
  lineinfile:
    dest: "{{ path_pam_password_auth }}"
    regexp: (^\s*password\s+(?:(?:sufficient)|(?:required)|(?:\[.*\]))\s+pam_unix\.so)\s+(.*)(md5|bigcrypt|sha256|blowfish)(.*)
    line: \1 \2 sha512 \4
    state: present
    backrefs: true

- name: CentOS | Harden Password | Set hashing algorithm to SHA512
  lineinfile:
    dest: /etc/login.defs
    regexp: ^ENCRYPT_METHOD\s+
    line: ENCRYPT_METHOD SHA512
    state: present

- name: CentOS | Harden Password | Check for libuser.conf
  stat:
    path: /etc/libuser.conf
  register: libuser_conf

- name: CentOS | Harden Password | Set hashing algorithm to SHA512
  lineinfile:
    dest: /etc/libuser.conf
    regexp: ^crypt_style\s*=
    line: crypt_style = sha512
    state: present
  when: libuser_conf.stat.exists